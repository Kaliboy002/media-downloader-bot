#!/usr/bin/env ruby

Dir.chdir File.expand_path "#{File.dirname File.realpath __FILE__}/.." do
  require_relative '../bot'
end

ENV['PRINT_CMD'] = '1'

opts  = SymMash.new metadata: {}
lopts = []
while ARGV[-1] and !File.exists?(ARGV[-1]) and ARGV[-1] !~ URI::regexp
  opt = ARGV.pop
  lopts.push opt
  Bot::UrlProcessor.add_opt opts, opt
end

Zipper.size_mb_limit = ENV['SIZE_MB_LIMIT']&.to_i

class Stdout
  include Bot::Helpers
  mock
end
bot = Stdout.new

path = ARGV
path.peach do |u|
  klass = if u =~ URI::regexp then Bot::UrlProcessor else Bot::Processor end
  dir   = if u =~ URI::regexp then Dir.pwd else File.dirname u end
  dir   = "#{dir}/converted"
  Dir.mkdir dir rescue nil
  Dir.mktmpdir "mdb-", dir do |dir|
    if klass == Bot::UrlProcessor
      lin = "#{u} #{lopts.join ' '}"
      prc = klass.new dir, lin, bot
      i   = prc.download.first
      prc.handle_input i
    else
      prc = klass.new dir, bot
      i   = prc.input_from_file u, opts
      prc.handle_input i

      Tagger.copy u, i.fn_out
    end
  end
end
